{"message":"expected one of `!`, `(`, `...`, `..=`, `..`, `::`, `=>`, `if`, `{`, or `|`, found keyword `as`","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":6909,"byte_end":6911,"line_start":224,"line_end":224,"column_start":36,"column_end":38,"is_primary":true,"text":[{"text":"        MetaEvents::SequenceNumber as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::SequenceNumber),","highlight_start":36,"highlight_end":38}],"label":"expected one of 10 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `!`, `(`, `...`, `..=`, `..`, `::`, `=>`, `if`, `{`, or `|`, found keyword `as`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:224:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        MetaEvents::SequenceNumber as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::SequenceNumber),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 10 possible tokens\u001b[0m\n\n"}
{"message":"cannot find derive macro `Rand` in this scope","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":280,"byte_end":284,"line_start":17,"line_end":17,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"#[derive(Debug, Rand)]","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find derive macro `Rand` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:17:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m#[derive(Debug, Rand)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\n"}
{"message":"unused imports: `NormalError`, `Normal`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":91,"byte_end":97,"line_start":5,"line_end":5,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"use rand_distr::{Distribution, Normal, NormalError, Uniform};","highlight_start":32,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":99,"byte_end":110,"line_start":5,"line_end":5,"column_start":40,"column_end":51,"is_primary":true,"text":[{"text":"use rand_distr::{Distribution, Normal, NormalError, Uniform};","highlight_start":40,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":89,"byte_end":110,"line_start":5,"line_end":5,"column_start":30,"column_end":51,"is_primary":true,"text":[{"text":"use rand_distr::{Distribution, Normal, NormalError, Uniform};","highlight_start":30,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `NormalError`, `Normal`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:5:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse rand_distr::{Distribution, Normal, NormalError, Uniform};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unreachable statement","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":9182,"byte_end":9207,"line_start":256,"line_end":256,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"    let header = MThd::new();","highlight_start":5,"highlight_end":30}],"label":"unreachable statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":6861,"byte_end":8749,"line_start":223,"line_end":243,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match test {","highlight_start":5,"highlight_end":17},{"text":"        MetaEvents::SequenceNumber as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::SequenceNumber),","highlight_start":1,"highlight_end":107},{"text":"        MetaEvents::Text as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::Text),","highlight_start":1,"highlight_end":87},{"text":"        MetaEvents::Copyright as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::Copyright),","highlight_start":1,"highlight_end":97},{"text":"        MetaEvents::SequenceORTrackName as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::SequenceORTrackName),","highlight_start":1,"highlight_end":117},{"text":"        MetaEvents::InstrumentName as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::InstrumentName),","highlight_start":1,"highlight_end":107},{"text":"        MetaEvents::Lyric as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::Lyric),","highlight_start":1,"highlight_end":89},{"text":"        MetaEvents::Marker as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::Marker),","highlight_start":1,"highlight_end":91},{"text":"        MetaEvents::CuePoint as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::CuePoint),","highlight_start":1,"highlight_end":95},{"text":"        MetaEvents::ProgramName as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::ProgramName),","highlight_start":1,"highlight_end":101},{"text":"        MetaEvents::DeviceNam as u32e => println!(\"test: {}, {:?}\", test, MetaEvents::DeviceName),","highlight_start":1,"highlight_end":99},{"text":"        MetaEvents::MIDIChannelPrefix as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::MIDIChannelPrefix),","highlight_start":1,"highlight_end":113},{"text":"        MetaEvents::MIDIPort as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::MIDIPort),","highlight_start":1,"highlight_end":95},{"text":"        MetaEvents::EndOfTrack as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::EndOfTrack),","highlight_start":1,"highlight_end":99},{"text":"        MetaEvents::Tempo as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::Tempo),","highlight_start":1,"highlight_end":89},{"text":"        MetaEvents::SMPTEOffset as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::SMPTEOffset),","highlight_start":1,"highlight_end":101},{"text":"        MetaEvents::TimeSignature as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::TimeSignature),","highlight_start":1,"highlight_end":105},{"text":"        MetaEvents::KeySignature as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::KeySignature),","highlight_start":1,"highlight_end":103},{"text":"        MetaEvents::SequencerSpecificEvent as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::SequencerSpecificEvent),","highlight_start":1,"highlight_end":123},{"text":"        _ => panic!(\"Error when matching on enum!\")","highlight_start":1,"highlight_end":52},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:256:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match test {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MetaEvents::SequenceNumber as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::SequenceNumber),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MetaEvents::Text as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::Text),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MetaEvents::Copyright as u32 => println!(\"test: {}, {:?}\", test, MetaEvents::Copyright),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Error when matching on enum!\")\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    let header = MThd::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable statement\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `rand::Rng`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":49,"byte_end":58,"line_start":4,"line_end":4,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use rand::Rng;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `rand::Rng`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse rand::Rng;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors\u001b[0m\n\n"}
